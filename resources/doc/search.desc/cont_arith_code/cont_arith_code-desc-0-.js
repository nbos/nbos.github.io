searchState.loadedDescShard("cont_arith_code", 0, "Turns a model and binary code into a value\nByte interface for <code>Decoder</code>\nTurns a model and a value into binary code\nByte interface for <code>Encoder</code>\nBins of a univariate distribution are indexed by <code>i64</code>s\nModels produce distributions and consume their resolutions …\nA single sample from a distribution\nA vector of values from a distribution. MLE for best …\nA univariate distribution with a truncated probability …\nA univariate distribution that can be truncated.\nRun the decoder\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the index of the upper-bound of the interval of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue iff <code>self.lo() == self.hi()</code>\nReturn the index of the lower-bound of the interval of the …\nConstruct an Encoder given a model that produces …\nConstruct a Decoder for a value given a model and code\nRetrieve the next distribution from the model.\nPush a value into the model and updates its state. Returns …\nQuantile (inverse CDF) and decompose of the remaining …\nConstruction\nSplit the remaining probability mass with the given bit …\nNumber of observations\nEntropy of the categorical in nats\nReturns the argument unchanged.\nReturns the argument unchanged.\nFit a cateogrical distribution to the given dataset\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAssumes input is trimmed\nKullback-Leibler divergence D(P||Q) of self (P) from a …\nLog-probability mass function\nLooks up a key using binary search\nSymbol -&gt; (count, log-probability)\nConstruction given a vector of log-probabilities\nGiven a cumulative probability [0-1), return the …\nNumerically stable Gaussian distribution\nStatic (non-optimal) Gaussian model of a set of integers\nUpdating (optimal) Gaussian model of a set of integers\nCount the information (bits) of a given index in the …\nCDF of the normal\n<code>0</code> if values are population, <code>1</code> if sample\nDefinite integral (equiv. to <code>self.cdf(hi) - self.cdf(lo)</code>)\nSeparate the fractional part of a number of the integer …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDoes a linear interpolation on the area under the curve of …\nDoes a linear interpolation on the area under the curve of …\nlog-CDF of the standard normal\nlog-CDF of the normal\nlog-PDF of the standard normal\nReturns a numerically stable <code>log(abs(cdf(hi) - cdf(lo)))</code> …\nReturns a numerically stable <code>log(abs(cdf(hi) - cdf(lo)))</code>\nLog of the complement of the CDF of the normal\n<code>s1 / s0</code>\nOne pass fit (Max Likelihood Estimation) of a Gaussian to …\nConstruction from a set of values\nConstruction from a set of values\nPDF of the standard normal\nPDF of the normal\nReturns the index of the bin from a division of the curve …\nReturns the <code>i</code>’th <code>q</code>’tile of self, i.e. the value at the …\nQuantile of the standard normal\nQuantile-exp (inverse of the log-CDF) of the standard …\nNumber of values\nSum of values\nSum of squares\n<code>sqrt( (s2 - (s1^2)/s0) / s0 - ddof )</code>\nTranslate the distribution to the right (positive) or to …")